name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Archive release binary
        shell: bash
        run: |
          mkdir -p dist
          BIN_NAME=ssh-config-gen
          TARGET=${{ matrix.target }}
          EXT=""
          if [[ "$TARGET" == *windows* ]]; then EXT=".exe"; fi
          cp target/$TARGET/release/$BIN_NAME$EXT dist/${BIN_NAME}-${TARGET}$EXT
          cd dist
          if [[ "$TARGET" == *windows* ]]; then
            7z a ${BIN_NAME}-${TARGET}.zip ${BIN_NAME}-${TARGET}$EXT
          else
            tar -czf ${BIN_NAME}-${TARGET}.tar.gz ${BIN_NAME}-${TARGET}$EXT
          fi

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
